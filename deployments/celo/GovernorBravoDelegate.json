{
  "address": "0xc469b24f9b61789810e47f85ce71e17fA2A35e6E",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "NewAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldImplementation",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "NewImplementation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPendingAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "NewPendingAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldProposalThreshold",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "ProposalThresholdSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingDelay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "VotingDelaySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVotingPeriod",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "VotingPeriodSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "expiration",
          "type": "uint256"
        }
      ],
      "name": "WhitelistAccountExpirationSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldGuardian",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newGuardian",
          "type": "address"
        }
      ],
      "name": "WhitelistGuardianSet",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MAX_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MIN_PROPOSAL_THRESHOLD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MIN_VOTING_DELAY",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MIN_VOTING_PERIOD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "_acceptAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        }
      ],
      "name": "_setPendingAdmin",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newProposalThreshold",
          "type": "uint256"
        }
      ],
      "name": "_setProposalThreshold",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingDelay",
          "type": "uint256"
        }
      ],
      "name": "_setVotingDelay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVotingPeriod",
          "type": "uint256"
        }
      ],
      "name": "_setVotingPeriod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "support",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "reason",
          "type": "string"
        }
      ],
      "name": "castVoteWithReason",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "support",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "votes",
              "type": "uint256"
            }
          ],
          "internalType": "struct GovernorBravoDelegateStorageV1.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialProposalId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "vemobi_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "votingPeriod_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "votingDelay_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "proposalThreshold_",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "abstainVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum GovernorBravoDelegateStorageV1.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vemobi",
      "outputs": [
        {
          "internalType": "contract veMOBIInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x725b0bf3fa4ef2a0e95b1ced32bceb064347afbcb632812c419c103f6e761ede",
  "receipt": {
    "to": null,
    "from": "0x59A6AbC89C158ef88d5872CaB4aC3B08474883D9",
    "contractAddress": "0xc469b24f9b61789810e47f85ce71e17fA2A35e6E",
    "transactionIndex": 11,
    "gasUsed": "4009507",
    "logsBloom": "0x
    "blockHash": "0x2b301c8f60e08050757e1927b710de9526b5db46b9152785231f3e49011d14b9",
    "transactionHash": "0x725b0bf3fa4ef2a0e95b1ced32bceb064347afbcb632812c419c103f6e761ede",
    "logs": [],
    "blockNumber": 10606904,
    "cumulativeGasUsed": "6554931",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "dd713f2e79ac237006b0bd07e2eca38f",
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldProposalThreshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"ProposalThresholdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingDelay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"VotingDelaySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVotingPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"VotingPeriodSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"WhitelistAccountExpirationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldGuardian\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"WhitelistGuardianSet\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MAX_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_VOTING_DELAY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MIN_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newProposalThreshold\",\"type\":\"uint256\"}],\"name\":\"_setProposalThreshold\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingDelay\",\"type\":\"uint256\"}],\"name\":\"_setVotingDelay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVotingPeriod\",\"type\":\"uint256\"}],\"name\":\"_setVotingPeriod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"castVoteWithReason\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"support\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"internalType\":\"struct GovernorBravoDelegateStorageV1.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"vemobi_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingDelay_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalThreshold_\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum GovernorBravoDelegateStorageV1.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vemobi\",\"outputs\":[{\"internalType\":\"contract veMOBIInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"_acceptAdmin()\":{\"details\":\"Admin function for pending admin to accept role and update admin\"},\"_setPendingAdmin(address)\":{\"details\":\"Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\",\"params\":{\"newPendingAdmin\":\"New pending admin.\"}},\"_setProposalThreshold(uint256)\":{\"details\":\"newProposalThreshold must be greater than the hardcoded min\",\"params\":{\"newProposalThreshold\":\"new proposal threshold\"}},\"_setVotingDelay(uint256)\":{\"params\":{\"newVotingDelay\":\"new voting delay, in blocks\"}},\"_setVotingPeriod(uint256)\":{\"params\":{\"newVotingPeriod\":\"new voting period, in blocks\"}},\"cancel(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to cancel\"}},\"castVote(uint256,uint8)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"castVoteWithReason(uint256,uint8,string)\":{\"params\":{\"proposalId\":\"The id of the proposal to vote on\",\"reason\":\"The reason given for the vote by the voter\",\"support\":\"The support value for the vote. 0=against, 1=for, 2=abstain\"}},\"execute(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to execute\"}},\"getActions(uint256)\":{\"params\":{\"proposalId\":\"the id of the proposal\"},\"return\":\"Targets, values, signatures, and calldatas of the proposal actions\"},\"getReceipt(uint256,address)\":{\"params\":{\"proposalId\":\"the id of proposal\",\"voter\":\"The address of the voter\"},\"return\":\"The voting receipt\"},\"initialize(address,address,uint256,uint256,uint256)\":{\"params\":{\"proposalThreshold_\":\"The initial proposal threshold\",\"timelock_\":\"The address of the Timelock\",\"vemobi_\":\"The address of the veMOBI token\",\"votingDelay_\":\"The initial voting delay\",\"votingPeriod_\":\"The initial voting period\"}},\"propose(address[],uint256[],string[],bytes[],string)\":{\"params\":{\"calldatas\":\"Calldatas for proposal calls\",\"description\":\"String description of the proposal\",\"signatures\":\"Function signatures for proposal calls\",\"targets\":\"Target addresses for proposal calls\",\"values\":\"Eth values for proposal calls\"},\"return\":\"Proposal id of new proposal\"},\"queue(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal to queue\"}},\"state(uint256)\":{\"params\":{\"proposalId\":\"The id of the proposal\"},\"return\":\"Proposal state\"}}},\"userdoc\":{\"methods\":{\"_acceptAdmin()\":{\"notice\":\"Accepts transfer of admin rights. msg.sender must be pendingAdmin\"},\"_setPendingAdmin(address)\":{\"notice\":\"Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\"},\"_setProposalThreshold(uint256)\":{\"notice\":\"Admin function for setting the proposal threshold\"},\"_setVotingDelay(uint256)\":{\"notice\":\"Admin function for setting the voting delay\"},\"_setVotingPeriod(uint256)\":{\"notice\":\"Admin function for setting the voting period\"},\"cancel(uint256)\":{\"notice\":\"Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\"},\"castVote(uint256,uint8)\":{\"notice\":\"Cast a vote for a proposal\"},\"castVoteWithReason(uint256,uint8,string)\":{\"notice\":\"Cast a vote for a proposal with a reason\"},\"execute(uint256)\":{\"notice\":\"Executes a queued proposal if eta has passed\"},\"getActions(uint256)\":{\"notice\":\"Gets actions of a proposal\"},\"getReceipt(uint256,address)\":{\"notice\":\"Gets the receipt for a voter on a given proposal\"},\"initialize(address,address,uint256,uint256,uint256)\":{\"notice\":\"Used to initialize the contract during delegator contructor\"},\"propose(address[],uint256[],string[],bytes[],string)\":{\"notice\":\"Function used to propose a new proposal. Sender must have delegates above the proposal threshold\"},\"queue(uint256)\":{\"notice\":\"Queues a proposal of state succeeded\"},\"state(uint256)\":{\"notice\":\"Gets the state of a proposal\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/Governance/GovernorBravoDelegateG1.sol\":\"GovernorBravoDelegate\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":99999},\"remappings\":[]},\"sources\":{\"contracts/Governance/GovernorBravoDelegateG1.sol\":{\"content\":\"pragma solidity ^0.5.16;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"./GovernorBravoInterfaces.sol\\\";\\n\\ncontract GovernorBravoDelegate is GovernorBravoDelegateStorageV1, GovernorBravoEvents {\\n\\n    /// @notice The name of this contract\\n    string public constant name = \\\"Mobius Governance\\\";\\n\\n    /// @notice The minimum setable proposal threshold\\n    uint public constant MIN_PROPOSAL_THRESHOLD = 1000000e18; // 1,000,000 veMOBI\\n\\n    /// @notice The maximum setable proposal threshold\\n    uint public constant MAX_PROPOSAL_THRESHOLD =  20000000e18; //20,000,000 veMOBI\\n\\n    /// @notice The minimum setable voting period\\n    uint public constant MIN_VOTING_PERIOD = 12; // About 100 seconds\\n\\n    /// @notice The max setable voting period\\n    uint public constant MAX_VOTING_PERIOD = 120960; // About 1 week\\n\\n    /// @notice The min setable voting delay\\n    uint public constant MIN_VOTING_DELAY = 1;\\n\\n    /// @notice The max setable voting delay\\n    uint public constant MAX_VOTING_DELAY = 120960; // About 1 week\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    uint public constant quorumVotes =  4000000e18; // 400,000 = 4% of veMOBI\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    uint public constant proposalMaxOperations = 10; // 10 actions\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH = keccak256(\\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\");\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH = keccak256(\\\"Ballot(uint256 proposalId,uint8 support)\\\");\\n\\n    /**\\n      * @notice Used to initialize the contract during delegator contructor\\n      * @param timelock_ The address of the Timelock\\n      * @param vemobi_ The address of the veMOBI token\\n      * @param votingPeriod_ The initial voting period\\n      * @param votingDelay_ The initial voting delay\\n      * @param proposalThreshold_ The initial proposal threshold\\n      */\\n    function initialize(address timelock_, address vemobi_, uint votingPeriod_, uint votingDelay_, uint proposalThreshold_) public {\\n        require(address(timelock) == address(0), \\\"GovernorBravo::initialize: can only initialize once\\\");\\n        require(msg.sender == admin, \\\"GovernorBravo::initialize: admin only\\\");\\n        require(timelock_ != address(0), \\\"GovernorBravo::initialize: invalid timelock address\\\");\\n        require(vemobi_ != address(0), \\\"GovernorBravo::initialize: invalid vemobi address\\\");\\n        require(votingPeriod_ >= MIN_VOTING_PERIOD && votingPeriod_ <= MAX_VOTING_PERIOD, \\\"GovernorBravo::initialize: invalid voting period\\\");\\n        require(votingDelay_ >= MIN_VOTING_DELAY && votingDelay_ <= MAX_VOTING_DELAY, \\\"GovernorBravo::initialize: invalid voting delay\\\");\\n        require(proposalThreshold_ >= MIN_PROPOSAL_THRESHOLD && proposalThreshold_ <= MAX_PROPOSAL_THRESHOLD, \\\"GovernorBravo::initialize: invalid proposal threshold\\\");\\n\\n        timelock = TimelockInterface(timelock_);\\n        vemobi = veMOBIInterface(vemobi_);\\n        votingPeriod = votingPeriod_;\\n        votingDelay = votingDelay_;\\n        proposalThreshold = proposalThreshold_;\\n    }\\n\\n    /**\\n      * @notice Function used to propose a new proposal. Sender must have delegates above the proposal threshold\\n      * @param targets Target addresses for proposal calls\\n      * @param values Eth values for proposal calls\\n      * @param signatures Function signatures for proposal calls\\n      * @param calldatas Calldatas for proposal calls\\n      * @param description String description of the proposal\\n      * @return Proposal id of new proposal\\n      */\\n    function propose(address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas, string memory description) public returns (uint) {\\n        // Reject proposals before initiating as Governor\\n        require(vemobi.balanceOfAt(msg.sender, sub256(block.number, 1)) > proposalThreshold, \\\"GovernorBravo::propose: proposer votes below proposal threshold\\\");\\n        require(targets.length == values.length && targets.length == signatures.length && targets.length == calldatas.length, \\\"GovernorBravo::propose: proposal function information arity mismatch\\\");\\n        require(targets.length != 0, \\\"GovernorBravo::propose: must provide actions\\\");\\n        require(targets.length <= proposalMaxOperations, \\\"GovernorBravo::propose: too many actions\\\");\\n\\n        uint latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n          ProposalState proposersLatestProposalState = state(latestProposalId);\\n          require(proposersLatestProposalState != ProposalState.Active, \\\"GovernorBravo::propose: one live proposal per proposer, found an already active proposal\\\");\\n          require(proposersLatestProposalState != ProposalState.Pending, \\\"GovernorBravo::propose: one live proposal per proposer, found an already pending proposal\\\");\\n        }\\n\\n        uint startBlock = add256(block.number, votingDelay);\\n        uint endBlock = add256(startBlock, votingPeriod);\\n\\n        proposalCount++;\\n        Proposal memory newProposal = Proposal({\\n            id: proposalCount,\\n            proposer: msg.sender,\\n            eta: 0,\\n            targets: targets,\\n            values: values,\\n            signatures: signatures,\\n            calldatas: calldatas,\\n            startBlock: startBlock,\\n            endBlock: endBlock,\\n            forVotes: 0,\\n            againstVotes: 0,\\n            abstainVotes: 0,\\n            canceled: false,\\n            executed: false\\n        });\\n\\n        proposals[newProposal.id] = newProposal;\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        emit ProposalCreated(newProposal.id, msg.sender, targets, values, signatures, calldatas, startBlock, endBlock, description);\\n        return newProposal.id;\\n    }\\n\\n    /**\\n      * @notice Queues a proposal of state succeeded\\n      * @param proposalId The id of the proposal to queue\\n      */\\n    function queue(uint proposalId) external {\\n        require(state(proposalId) == ProposalState.Succeeded, \\\"GovernorBravo::queue: proposal can only be queued if it is succeeded\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        uint eta = add256(block.timestamp, timelock.delay());\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            queueOrRevertInternal(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], eta);\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function queueOrRevertInternal(address target, uint value, string memory signature, bytes memory data, uint eta) internal {\\n        require(!timelock.queuedTransactions(keccak256(abi.encode(target, value, signature, data, eta))), \\\"GovernorBravo::queueOrRevertInternal: identical proposal action already queued at eta\\\");\\n        timelock.queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    /**\\n      * @notice Executes a queued proposal if eta has passed\\n      * @param proposalId The id of the proposal to execute\\n      */\\n    function execute(uint proposalId) external payable {\\n        require(state(proposalId) == ProposalState.Queued, \\\"GovernorBravo::execute: proposal can only be executed if it is queued\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            timelock.executeTransaction.value(proposal.values[i])(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    /**\\n      * @notice Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold\\n      * @param proposalId The id of the proposal to cancel\\n      */\\n    function cancel(uint proposalId) external {\\n        require(state(proposalId) != ProposalState.Executed, \\\"GovernorBravo::cancel: cannot cancel executed proposal\\\");\\n\\n        Proposal storage proposal = proposals[proposalId];\\n        require(msg.sender == proposal.proposer || vemobi.balanceOfAt(proposal.proposer, sub256(block.number, 1)) < proposalThreshold, \\\"GovernorBravo::cancel: proposer above threshold\\\");\\n\\n        proposal.canceled = true;\\n        for (uint i = 0; i < proposal.targets.length; i++) {\\n            timelock.cancelTransaction(proposal.targets[i], proposal.values[i], proposal.signatures[i], proposal.calldatas[i], proposal.eta);\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    /**\\n      * @notice Gets actions of a proposal\\n      * @param proposalId the id of the proposal\\n      * @return Targets, values, signatures, and calldatas of the proposal actions\\n      */\\n    function getActions(uint proposalId) external view returns (address[] memory targets, uint[] memory values, string[] memory signatures, bytes[] memory calldatas) {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\n    }\\n\\n    /**\\n      * @notice Gets the receipt for a voter on a given proposal\\n      * @param proposalId the id of proposal\\n      * @param voter The address of the voter\\n      * @return The voting receipt\\n      */\\n    function getReceipt(uint proposalId, address voter) external view returns (Receipt memory) {\\n        return proposals[proposalId].receipts[voter];\\n    }\\n\\n    /**\\n      * @notice Gets the state of a proposal\\n      * @param proposalId The id of the proposal\\n      * @return Proposal state\\n      */\\n    function state(uint proposalId) public view returns (ProposalState) {\\n        require(proposalCount >= proposalId && proposalId > initialProposalId, \\\"GovernorBravo::state: invalid proposal id\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (proposal.forVotes <= proposal.againstVotes || proposal.forVotes < quorumVotes) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    /**\\n      * @notice Cast a vote for a proposal\\n      * @param proposalId The id of the proposal to vote on\\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n      */\\n    function castVote(uint proposalId, uint8 support) external {\\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), \\\"\\\");\\n    }\\n\\n    /**\\n      * @notice Cast a vote for a proposal with a reason\\n      * @param proposalId The id of the proposal to vote on\\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n      * @param reason The reason given for the vote by the voter\\n      */\\n    function castVoteWithReason(uint proposalId, uint8 support, string calldata reason) external {\\n        emit VoteCast(msg.sender, proposalId, support, castVoteInternal(msg.sender, proposalId, support), reason);\\n    }\\n\\n\\n    /**\\n      * @notice Internal function that caries out voting logic\\n      * @param voter The voter that is casting their vote\\n      * @param proposalId The id of the proposal to vote on\\n      * @param support The support value for the vote. 0=against, 1=for, 2=abstain\\n      * @return The number of votes cast\\n      */\\n    function castVoteInternal(address voter, uint proposalId, uint8 support) internal returns (uint256) {\\n        require(state(proposalId) == ProposalState.Active, \\\"GovernorBravo::castVoteInternal: voting is closed\\\");\\n        require(support <= 2, \\\"GovernorBravo::castVoteInternal: invalid vote type\\\");\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(receipt.hasVoted == false, \\\"GovernorBravo::castVoteInternal: voter already voted\\\");\\n        uint256 votes = vemobi.balanceOfAt(voter, proposal.startBlock);\\n\\n        if (support == 0) {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        } else if (support == 1) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else if (support == 2) {\\n            proposal.abstainVotes = add256(proposal.abstainVotes, votes);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        return votes;\\n    }\\n\\n    /**\\n      * @notice Admin function for setting the voting delay\\n      * @param newVotingDelay new voting delay, in blocks\\n      */\\n    function _setVotingDelay(uint newVotingDelay) external {\\n        require(msg.sender == admin, \\\"GovernorBravo::_setVotingDelay: admin only\\\");\\n        require(newVotingDelay >= MIN_VOTING_DELAY && newVotingDelay <= MAX_VOTING_DELAY, \\\"GovernorBravo::_setVotingDelay: invalid voting delay\\\");\\n        uint oldVotingDelay = votingDelay;\\n        votingDelay = newVotingDelay;\\n\\n        emit VotingDelaySet(oldVotingDelay,votingDelay);\\n    }\\n\\n    /**\\n      * @notice Admin function for setting the voting period\\n      * @param newVotingPeriod new voting period, in blocks\\n      */\\n    function _setVotingPeriod(uint newVotingPeriod) external {\\n        require(msg.sender == admin, \\\"GovernorBravo::_setVotingPeriod: admin only\\\");\\n        require(newVotingPeriod >= MIN_VOTING_PERIOD && newVotingPeriod <= MAX_VOTING_PERIOD, \\\"GovernorBravo::_setVotingPeriod: invalid voting period\\\");\\n        uint oldVotingPeriod = votingPeriod;\\n        votingPeriod = newVotingPeriod;\\n\\n        emit VotingPeriodSet(oldVotingPeriod, votingPeriod);\\n    }\\n\\n    /**\\n      * @notice Admin function for setting the proposal threshold\\n      * @dev newProposalThreshold must be greater than the hardcoded min\\n      * @param newProposalThreshold new proposal threshold\\n      */\\n    function _setProposalThreshold(uint newProposalThreshold) external {\\n        require(msg.sender == admin, \\\"GovernorBravo::_setProposalThreshold: admin only\\\");\\n        require(newProposalThreshold >= MIN_PROPOSAL_THRESHOLD && newProposalThreshold <= MAX_PROPOSAL_THRESHOLD, \\\"GovernorBravo::_setProposalThreshold: invalid proposal threshold\\\");\\n        uint oldProposalThreshold = proposalThreshold;\\n        proposalThreshold = newProposalThreshold;\\n\\n        emit ProposalThresholdSet(oldProposalThreshold, proposalThreshold);\\n    }\\n\\n    /**\\n      * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\n      * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\n      * @param newPendingAdmin New pending admin.\\n      */\\n    function _setPendingAdmin(address newPendingAdmin) external {\\n        // Check caller = admin\\n        require(msg.sender == admin, \\\"GovernorBravo:_setPendingAdmin: admin only\\\");\\n\\n        // Save current value, if any, for inclusion in log\\n        address oldPendingAdmin = pendingAdmin;\\n\\n        // Store pendingAdmin with value newPendingAdmin\\n        pendingAdmin = newPendingAdmin;\\n\\n        // Emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin)\\n        emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\\n    }\\n\\n    /**\\n      * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin\\n      * @dev Admin function for pending admin to accept role and update admin\\n      */\\n    function _acceptAdmin() external {\\n        // Check caller is pendingAdmin and pendingAdmin \\u2260 address(0)\\n        require(msg.sender == pendingAdmin && msg.sender != address(0), \\\"GovernorBravo:_acceptAdmin: pending admin only\\\");\\n\\n        // Save current values for inclusion in log\\n        address oldAdmin = admin;\\n        address oldPendingAdmin = pendingAdmin;\\n\\n        // Store admin with value pendingAdmin\\n        admin = pendingAdmin;\\n\\n        // Clear the pending value\\n        pendingAdmin = address(0);\\n\\n        emit NewAdmin(oldAdmin, admin);\\n        emit NewPendingAdmin(oldPendingAdmin, pendingAdmin);\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint) {\\n        uint c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function getChainIdInternal() internal pure returns (uint) {\\n        uint chainId;\\n        assembly { chainId := chainid() }\\n        return chainId;\\n    }\\n}\",\"keccak256\":\"0xd38618baa94564a3b1ca27b08a6794906019aa5aca19d2746d29300aa8848f27\"},\"contracts/Governance/GovernorBravoInterfaces.sol\":{\"content\":\"pragma solidity ^0.5.16;\\npragma experimental ABIEncoderV2;\\n\\n\\ncontract GovernorBravoEvents {\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(uint id, address proposer, address[] targets, uint[] values, string[] signatures, bytes[] calldatas, uint startBlock, uint endBlock, string description);\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    /// @param voter The address which casted a vote\\n    /// @param proposalId The proposal id which was voted on\\n    /// @param support Support value for the vote. 0=against, 1=for, 2=abstain\\n    /// @param votes Number of votes which were cast by the voter\\n    /// @param reason The reason given for the vote by the voter\\n    event VoteCast(address indexed voter, uint proposalId, uint8 support, uint votes, string reason);\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint id, uint eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint id);\\n\\n    /// @notice An event emitted when the voting delay is set\\n    event VotingDelaySet(uint oldVotingDelay, uint newVotingDelay);\\n\\n    /// @notice An event emitted when the voting period is set\\n    event VotingPeriodSet(uint oldVotingPeriod, uint newVotingPeriod);\\n\\n    /// @notice Emitted when implementation is changed\\n    event NewImplementation(address oldImplementation, address newImplementation);\\n\\n    /// @notice Emitted when proposal threshold is set\\n    event ProposalThresholdSet(uint oldProposalThreshold, uint newProposalThreshold);\\n\\n    /// @notice Emitted when pendingAdmin is changed\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\n\\n    /// @notice Emitted when pendingAdmin is accepted, which means admin is updated\\n    event NewAdmin(address oldAdmin, address newAdmin);\\n\\n    /// @notice Emitted when whitelist account expiration is set\\n    event WhitelistAccountExpirationSet(address account, uint expiration);\\n\\n    /// @notice Emitted when the whitelistGuardian is set\\n    event WhitelistGuardianSet(address oldGuardian, address newGuardian);\\n}\\n\\ncontract GovernorBravoDelegatorStorage {\\n    /// @notice Administrator for this contract\\n    address public admin;\\n\\n    /// @notice Pending administrator for this contract\\n    address public pendingAdmin;\\n\\n    /// @notice Active brains of Governor\\n    address public implementation;\\n}\\n\\n\\n/**\\n * @title Storage for Governor Bravo Delegate\\n * @notice For future upgrades, do not change GovernorBravoDelegateStorageV1. Create a new\\n * contract which implements GovernorBravoDelegateStorageV1 and following the naming convention\\n * GovernorBravoDelegateStorageVX.\\n */\\ncontract GovernorBravoDelegateStorageV1 is GovernorBravoDelegatorStorage {\\n\\n    /// @notice The delay before voting on a proposal may take place, once proposed, in blocks\\n    uint public votingDelay;\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    uint public votingPeriod;\\n\\n    /// @notice The number of votes required in order for a voter to become a proposer\\n    uint public proposalThreshold;\\n\\n    /// @notice Initial proposal id set at become\\n    uint public initialProposalId;\\n\\n    /// @notice The total number of proposals\\n    uint public proposalCount;\\n\\n    /// @notice The address of the Mobius Protocol Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of locked mobi governance token\\n    veMOBIInterface public vemobi;\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping (uint => Proposal) public proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping (address => uint) public latestProposalIds;\\n\\n\\n    struct Proposal {\\n        /// @notice Unique id for looking up a proposal\\n        uint id;\\n\\n        /// @notice Creator of the proposal\\n        address proposer;\\n\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint eta;\\n\\n        /// @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint[] values;\\n\\n        /// @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n\\n        /// @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint startBlock;\\n\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\n        uint endBlock;\\n\\n        /// @notice Current number of votes in favor of this proposal\\n        uint forVotes;\\n\\n        /// @notice Current number of votes in opposition to this proposal\\n        uint againstVotes;\\n\\n        /// @notice Current number of votes for abstaining for this proposal\\n        uint abstainVotes;\\n\\n        /// @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n\\n        /// @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n\\n        /// @notice Receipts of ballots for the entire set of voters\\n        mapping (address => Receipt) receipts;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        /// @notice Whether or not a vote has been cast\\n        bool hasVoted;\\n\\n        /// @notice Whether or not the voter supports the proposal or abstains\\n        uint8 support;\\n\\n        /// @notice The number of votes the voter had, which were cast\\n        uint256 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n}\\n\\ncontract GovernorBravoDelegateStorageV2 is GovernorBravoDelegateStorageV1 {\\n    /// @notice Stores the expiration of account whitelist status as a timestamp\\n    mapping (address => uint) public whitelistAccountExpirations;\\n\\n    /// @notice Address which manages whitelisted proposals and whitelist accounts\\n    address public whitelistGuardian;\\n}\\n\\ninterface TimelockInterface {\\n    function delay() external view returns (uint);\\n    function GRACE_PERIOD() external view returns (uint);\\n    function acceptAdmin() external;\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n    function queueTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external returns (bytes32);\\n    function cancelTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external;\\n    function executeTransaction(address target, uint value, string calldata signature, bytes calldata data, uint eta) external payable returns (bytes memory);\\n}\\n\\ninterface veMOBIInterface {\\n    function balanceOfAt(address account, uint blockNumber) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd4d8e6ef407d7b241dc94520782436efd4d29ce052e64853e604ea53d26c26fa\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506147ea806100206000396000f3fe6080604052600436106102855760003560e01c80637b3c71d311610153578063da35c664116100cb578063e48083fe1161007f578063f851a44011610064578063f851a44014610678578063fc4eee421461068d578063fe0d94c1146106a257610285565b8063e48083fe1461064e578063e9c714f21461066357610285565b8063ddf0b009116100b0578063ddf0b009146105ec578063deaaa7cc1461060c578063e23a9a521461062157610285565b8063da35c664146105b7578063da95691a146105cc57610285565b8063b112626311610122578063b71d1a0c11610107578063b71d1a0c14610562578063d13f90b414610582578063d33219b4146105a257610285565b8063b112626314610516578063b58131b01461054d57610285565b80637b3c71d3146104e15780637bdbe4d014610501578063a64e024a14610516578063a6a0b3de1461052b57610285565b806324bc1a64116102015780633e4f49e6116101b5578063567813881161019a57806356781388146104975780635c60da1b146104b7578063791f5d23146104cc57610285565b80633e4f49e61461044a57806340e58ee51461047757610285565b806326782247116101e657806326782247146103e3578063328dd982146104055780633932abb11461043557610285565b806324bc1a64146103b957806325fd935a146103ce57610285565b806317977c61116102585780631dfb1b5a1161023d5780631dfb1b5a1461036f57806320606b701461038f578063215809ca146103a457610285565b806317977c611461032f57806317ba1b8b1461034f57610285565b8063013cf08b1461028a57806302a251a3146102c957806306fdde03146102eb5780630ea2d98c1461030d575b600080fd5b34801561029657600080fd5b506102aa6102a5366004612f2f565b6106b5565b6040516102c09a999897969594939291906144ef565b60405180910390f35b3480156102d557600080fd5b506102de610725565b6040516102c091906141fe565b3480156102f757600080fd5b5061030061072b565b6040516102c09190614228565b34801561031957600080fd5b5061032d610328366004612f2f565b610764565b005b34801561033b57600080fd5b506102de61034a366004612d44565b61084e565b34801561035b57600080fd5b5061032d61036a366004612f2f565b610860565b34801561037b57600080fd5b5061032d61038a366004612f2f565b610946565b34801561039b57600080fd5b506102de610a1b565b3480156103b057600080fd5b506102de610a32565b3480156103c557600080fd5b506102de610a37565b3480156103da57600080fd5b506102de610a46565b3480156103ef57600080fd5b506103f8610a55565b6040516102c091906140c4565b34801561041157600080fd5b50610425610420366004612f2f565b610a71565b6040516102c094939291906141b1565b34801561044157600080fd5b506102de610d49565b34801561045657600080fd5b5061046a610465366004612f2f565b610d4f565b6040516102c0919061421a565b34801561048357600080fd5b5061032d610492366004612f2f565b610f16565b3480156104a357600080fd5b5061032d6104b2366004612f87565b6111e7565b3480156104c357600080fd5b506103f8611231565b3480156104d857600080fd5b506102de61124d565b3480156104ed57600080fd5b5061032d6104fc366004612fb7565b61125b565b34801561050d57600080fd5b506102de6112ab565b34801561052257600080fd5b506102de6112b0565b34801561053757600080fd5b506105406112b7565b6040516102c0919061420c565b34801561055957600080fd5b506102de6112d3565b34801561056e57600080fd5b5061032d61057d366004612d44565b6112d9565b34801561058e57600080fd5b5061032d61059d366004612d6a565b6113a2565b3480156105ae57600080fd5b5061054061162f565b3480156105c357600080fd5b506102de61164b565b3480156105d857600080fd5b506102de6105e7366004612ddf565b611651565b3480156105f857600080fd5b5061032d610607366004612f2f565b611b57565b34801561061857600080fd5b506102de611e5c565b34801561062d57600080fd5b5061064161063c366004612f4d565b611e68565b6040516102c09190614439565b34801561065a57600080fd5b506102de611ed7565b34801561066f57600080fd5b5061032d611edc565b34801561068457600080fd5b506103f8612013565b34801561069957600080fd5b506102de61202f565b61032d6106b0366004612f2f565b612035565b600a60208190526000918252604090912080546001820154600283015460078401546008850154600986015496860154600b870154600c90970154959773ffffffffffffffffffffffffffffffffffffffff90951696939592949193919290919060ff808216916101009004168a565b60045481565b6040518060400160405280601181526020017f4d6f6269757320476f7665726e616e636500000000000000000000000000000081525081565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614289565b60405180910390fd5b600c81101580156107d257506201d8808111155b610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906142b9565b60048054908290556040517f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828906108429083908590614575565b60405180910390a15050565b600b6020526000908152604090205481565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906143f9565b69d3c21bcecceda100000081101580156108d657506a108b2a2c280290940000008111155b61090c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614349565b60058054908290556040517fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461906108429083908590614575565b60005473ffffffffffffffffffffffffffffffffffffffff163314610997576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906142a9565b600181101580156109ab57506201d8808111155b6109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906142e9565b60038054908290556040517fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93906108429083908590614575565b604051610a27906140b9565b604051809103902081565b600c81565b6a034f086f3b33b68400000081565b6a108b2a2c2802909400000081565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b6060806060806000600a600087815260200190815260200160002090508060030181600401826005018360060183805480602002602001604051908101604052809291908181526020018280548015610b0057602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ad5575b5050505050935082805480602002602001604051908101604052809291908181526020018280548015610b5257602002820191906000526020600020905b815481526020019060010190808311610b3e575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b82821015610c435760008481526020908190208301805460408051601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600187161502019094169390930492830185900485028101850190915281815292830182828015610c2f5780601f10610c0457610100808354040283529160200191610c2f565b820191906000526020600020905b815481529060010190602001808311610c1257829003601f168201915b505050505081526020019060010190610b7a565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610d335760008481526020908190208301805460408051601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600187161502019094169390930492830185900485028101850190915281815292830182828015610d1f5780601f10610cf457610100808354040283529160200191610d1f565b820191906000526020600020905b815481529060010190602001808311610d0257829003601f168201915b505050505081526020019060010190610c6a565b5050505090509450945094509450509193509193565b60035481565b60008160075410158015610d64575060065482115b610d9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614409565b6000828152600a60205260409020600c81015460ff1615610dbf576002915050610f11565b80600701544311610dd4576000915050610f11565b80600801544311610de9576001915050610f11565b80600a01548160090154111580610e0e57506a034f086f3b33b6840000008160090154105b15610e1d576003915050610f11565b6002810154610e30576004915050610f11565b600c810154610100900460ff1615610e4c576007915050610f11565b6002810154600854604080517fc1a287e20000000000000000000000000000000000000000000000000000000081529051610efb939273ffffffffffffffffffffffffffffffffffffffff169163c1a287e2916004808301926020929190829003018186803b158015610ebe57600080fd5b505afa158015610ed2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ef69190810190612edc565b61225d565b4210610f0b576006915050610f11565b60059150505b919050565b6007610f2182610d4f565b6007811115610f2c57fe5b1415610f64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906143e9565b6000818152600a60205260409020600181015473ffffffffffffffffffffffffffffffffffffffff1633148061103d575060055460095460018381015473ffffffffffffffffffffffffffffffffffffffff92831692634ee2cd7e92911690610fce9043906122a3565b6040518363ffffffff1660e01b8152600401610feb929190614108565b60206040518083038186803b15801561100357600080fd5b505afa158015611017573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061103b9190810190612edc565b105b611073576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614399565b600c810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905560005b60038201548110156111b75760085460038301805473ffffffffffffffffffffffffffffffffffffffff9092169163591fcdfe9190849081106110e257fe5b60009182526020909120015460048501805473ffffffffffffffffffffffffffffffffffffffff909216918590811061111757fe5b906000526020600020015485600501858154811061113157fe5b9060005260206000200186600601868154811061114a57fe5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401611179959493929190614170565b600060405180830381600087803b15801561119357600080fd5b505af11580156111a7573d6000803e3d6000fd5b5050600190920191506110a39050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c8260405161084291906141fe565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda483836112168483836122e5565b604051611225939291906145c9565b60405180910390a25050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b69d3c21bcecceda100000081565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4858561128a8483836122e5565b868660405161129d959493929190614583565b60405180910390a250505050565b600a81565b6201d88081565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60005473ffffffffffffffffffffffffffffffffffffffff16331461132a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614269565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff00000000000000000000000000000000000000008316179092556040519116907fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99061084290839085906140ed565b60085473ffffffffffffffffffffffffffffffffffffffff16156113f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614259565b60005473ffffffffffffffffffffffffffffffffffffffff163314611443576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614339565b73ffffffffffffffffffffffffffffffffffffffff8516611490576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614299565b73ffffffffffffffffffffffffffffffffffffffff84166114dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614249565b600c83101580156114f157506201d8808311155b611527576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614419565b6001821015801561153b57506201d8808211155b611571576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614319565b69d3c21bcecceda1000000811015801561159657506a108b2a2c280290940000008111155b6115cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906142f9565b6008805473ffffffffffffffffffffffffffffffffffffffff9687167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556009805495909616941693909317909355600455600391909155600555565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b6005546009546000919073ffffffffffffffffffffffffffffffffffffffff16634ee2cd7e336116824360016122a3565b6040518363ffffffff1660e01b815260040161169f9291906140d2565b60206040518083038186803b1580156116b757600080fd5b505afa1580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116ef9190810190612edc565b11611726576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906143d9565b84518651148015611738575083518651145b8015611745575082518651145b61177b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614329565b85516117b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614379565b600a865111156117ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906143a9565b336000908152600b602052604090205480156118a057600061181082610d4f565b9050600181600781111561182057fe5b1415611858576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906143c9565b600081600781111561186657fe5b141561189e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906143b9565b505b60006118ae4360035461225d565b905060006118be8260045461225d565b60078054600101905590506118d1612707565b604051806101c0016040528060075481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600081526020018b81526020018a815260200189815260200188815260200184815260200183815260200160008152602001600081526020016000815260200160001515815260200160001515815250905080600a6000836000015181526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190805190602001906119e2929190612790565b50608082015180516119fe91600484019160209091019061281a565b5060a08201518051611a1a916005840191602090910190612861565b5060c08201518051611a369160068401916020909101906128ba565b5060e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b015561018082015181600c0160006101000a81548160ff0219169083151502179055506101a082015181600c0160016101000a81548160ff0219169083151502179055509050508060000151600b6000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e604051611b4199989796959493929190614447565b60405180910390a1519998505050505050505050565b6004611b6282610d4f565b6007811115611b6d57fe5b14611ba4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614359565b6000818152600a6020908152604080832060085482517f6a42b8f80000000000000000000000000000000000000000000000000000000081529251919493611c2493429373ffffffffffffffffffffffffffffffffffffffff90931692636a42b8f892600480840193919291829003018186803b158015610ebe57600080fd5b905060005b6003830154811015611e1557611e0d836003018281548110611c4757fe5b60009182526020909120015460048501805473ffffffffffffffffffffffffffffffffffffffff9092169184908110611c7c57fe5b9060005260206000200154856005018481548110611c9657fe5b600091825260209182902001805460408051601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600187161502019094169390930492830185900485028101850190915281815292830182828015611d425780601f10611d1757610100808354040283529160200191611d42565b820191906000526020600020905b815481529060010190602001808311611d2557829003601f168201915b5050505050866006018581548110611d5657fe5b600091825260209182902001805460408051601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600187161502019094169390930492830185900485028101850190915281815292830182828015611e025780601f10611dd757610100808354040283529160200191611e02565b820191906000526020600020905b815481529060010190602001808311611de557829003601f168201915b50505050508661255b565b600101611c29565b50600282018190556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289290611e4f9085908490614575565b60405180910390a1505050565b604051610a27906140ae565b611e70612913565b506000828152600a6020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452600d018252918290208251606081018452815460ff80821615158352610100909104169281019290925260010154918101919091525b92915050565b600181565b60015473ffffffffffffffffffffffffffffffffffffffff1633148015611f0257503315155b611f38576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614389565b600080546001805473ffffffffffffffffffffffffffffffffffffffff8082167fffffffffffffffffffffffff00000000000000000000000000000000000000008086168217968790559092169092556040519282169390927ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc92611fc19286929116906140ed565b60405180910390a16001546040517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99161084291849173ffffffffffffffffffffffffffffffffffffffff16906140ed565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600561204082610d4f565b600781111561204b57fe5b14612082576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614309565b6000818152600a60205260408120600c810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055905b600382015481101561222d5760085460048301805473ffffffffffffffffffffffffffffffffffffffff90921691630825f38f9190849081106120ff57fe5b906000526020600020015484600301848154811061211957fe5b60009182526020909120015460048601805473ffffffffffffffffffffffffffffffffffffffff909216918690811061214e57fe5b906000526020600020015486600501868154811061216857fe5b9060005260206000200187600601878154811061218157fe5b9060005260206000200188600201546040518763ffffffff1660e01b81526004016121b0959493929190614170565b6000604051808303818588803b1580156121c957600080fd5b505af11580156121dd573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526122249190810190612efa565b506001016120c0565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f8260405161084291906141fe565b60008282018381101561229c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614369565b9392505050565b6000828211156122df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614429565b50900390565b600060016122f284610d4f565b60078111156122fd57fe5b14612334576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906142c9565b60028260ff161115612372576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614239565b6000838152600a6020908152604080832073ffffffffffffffffffffffffffffffffffffffff88168452600d8101909252909120805460ff16156123e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906142d9565b60095460078301546040517f4ee2cd7e00000000000000000000000000000000000000000000000000000000815260009273ffffffffffffffffffffffffffffffffffffffff1691634ee2cd7e9161243e918b91600401614108565b60206040518083038186803b15801561245657600080fd5b505afa15801561246a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061248e9190810190612edc565b905060ff85166124b0576124a683600a01548261225d565b600a8401556124f4565b8460ff16600114156124d4576124ca83600901548261225d565b60098401556124f4565b8460ff16600214156124f4576124ee83600b01548261225d565b600b8401555b815460017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090911681177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1661010060ff8816021783559091018190559150509392505050565b60085460405173ffffffffffffffffffffffffffffffffffffffff9091169063f2b06537906125969088908890889088908890602001614116565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016125c891906141fe565b60206040518083038186803b1580156125e057600080fd5b505afa1580156125f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126189190810190612ebe565b1561264f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614279565b6008546040517f3a66f90100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690633a66f901906126ad9088908890889088908890600401614116565b602060405180830381600087803b1580156126c757600080fd5b505af11580156126db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126ff9190810190612edc565b505050505050565b604051806101c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b82805482825590600052602060002090810192821561280a579160200282015b8281111561280a57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906127b0565b50612816929150612933565b5090565b828054828255906000526020600020908101928215612855579160200282015b8281111561285557825182559160200191906001019061283a565b50612816929150612972565b8280548282559060005260206000209081019282156128ae579160200282015b828111156128ae578251805161289e91849160209091019061298c565b5091602001919060010190612881565b506128169291506129f9565b828054828255906000526020600020908101928215612907579160200282015b8281111561290757825180516128f791849160209091019061298c565b50916020019190600101906128da565b50612816929150612a1c565b604080516060810182526000808252602082018190529181019190915290565b61296f91905b808211156128165780547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155600101612939565b90565b61296f91905b808211156128165760008155600101612978565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106129cd57805160ff1916838001178555612855565b82800160010185558215612855579182018281111561285557825182559160200191906001019061283a565b61296f91905b80821115612816576000612a138282612a3f565b506001016129ff565b61296f91905b80821115612816576000612a368282612a3f565b50600101612a22565b50805460018160011615610100020316600290046000825580601f10612a655750612a83565b601f016020900490600052602060002090810190612a839190612972565b50565b8035611ed181614778565b600082601f830112612aa257600080fd5b8135612ab5612ab082614632565b61460b565b91508181835260208401935060208101905083856020840282011115612ada57600080fd5b60005b83811015612b065781612af08882612a86565b8452506020928301929190910190600101612add565b5050505092915050565b600082601f830112612b2157600080fd5b8135612b2f612ab082614632565b81815260209384019390925082018360005b83811015612b065781358601612b578882612c50565b8452506020928301929190910190600101612b41565b600082601f830112612b7e57600080fd5b8135612b8c612ab082614632565b81815260209384019390925082018360005b83811015612b065781358601612bb48882612c50565b8452506020928301929190910190600101612b9e565b600082601f830112612bdb57600080fd5b8135612be9612ab082614632565b91508181835260208401935060208101905083856020840282011115612c0e57600080fd5b60005b83811015612b065781612c248882612d2e565b8452506020928301929190910190600101612c11565b8051611ed18161478c565b8051611ed181614795565b600082601f830112612c6157600080fd5b8135612c6f612ab082614653565b91508082526020830160208301858383011115612c8b57600080fd5b612c9683828461470e565b50505092915050565b600082601f830112612cb057600080fd5b8151612cbe612ab082614653565b91508082526020830160208301858383011115612cda57600080fd5b612c9683828461471a565b60008083601f840112612cf757600080fd5b50813567ffffffffffffffff811115612d0f57600080fd5b602083019150836001820283011115612d2757600080fd5b9250929050565b8035611ed181614795565b8035611ed18161479e565b600060208284031215612d5657600080fd5b6000612d628484612a86565b949350505050565b600080600080600060a08688031215612d8257600080fd5b6000612d8e8888612a86565b9550506020612d9f88828901612a86565b9450506040612db088828901612d2e565b9350506060612dc188828901612d2e565b9250506080612dd288828901612d2e565b9150509295509295909350565b600080600080600060a08688031215612df757600080fd5b853567ffffffffffffffff811115612e0e57600080fd5b612e1a88828901612a91565b955050602086013567ffffffffffffffff811115612e3757600080fd5b612e4388828901612bca565b945050604086013567ffffffffffffffff811115612e6057600080fd5b612e6c88828901612b6d565b935050606086013567ffffffffffffffff811115612e8957600080fd5b612e9588828901612b10565b925050608086013567ffffffffffffffff811115612eb257600080fd5b612dd288828901612c50565b600060208284031215612ed057600080fd5b6000612d628484612c3a565b600060208284031215612eee57600080fd5b6000612d628484612c45565b600060208284031215612f0c57600080fd5b815167ffffffffffffffff811115612f2357600080fd5b612d6284828501612c9f565b600060208284031215612f4157600080fd5b6000612d628484612d2e565b60008060408385031215612f6057600080fd5b6000612f6c8585612d2e565b9250506020612f7d85828601612a86565b9150509250929050565b60008060408385031215612f9a57600080fd5b6000612fa68585612d2e565b9250506020612f7d85828601612d39565b60008060008060608587031215612fcd57600080fd5b6000612fd98787612d2e565b9450506020612fea87828801612d39565b935050604085013567ffffffffffffffff81111561300757600080fd5b61301387828801612ce5565b95989497509550505050565b600061302b838361305a565b505060200190565b600061229c83836131eb565b600061302b83836131e2565b613054816146f1565b82525050565b613054816146b8565b600061306e826146ab565b61307881856146af565b935061308383614699565b8060005b838110156130b157815161309b888261301f565b97506130a683614699565b925050600101613087565b509495945050505050565b60006130c7826146ab565b6130d181856146af565b9350836020820285016130e385614699565b8060005b8581101561311d57848403895281516131008582613033565b945061310b83614699565b60209a909a01999250506001016130e7565b5091979650505050505050565b6000613135826146ab565b61313f81856146af565b93508360208202850161315185614699565b8060005b8581101561311d578484038952815161316e8582613033565b945061317983614699565b60209a909a0199925050600101613155565b6000613196826146ab565b6131a081856146af565b93506131ab83614699565b8060005b838110156130b15781516131c3888261303f565b97506131ce83614699565b9250506001016131af565b613054816146c3565b6130548161296f565b60006131f6826146ab565b61320081856146af565b935061321081856020860161471a565b61321981614746565b9093019392505050565b6000815460018116600081146132405760018114613284576132c3565b607f600283041661325181876146af565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00841681529550506020850192506132c3565b6002820461329281876146af565b955061329d8561469f565b60005b828110156132bc578154888201526001909101906020016132a0565b8701945050505b505092915050565b613054816146f8565b61305481614703565b60006132e983856146af565b93506132f683858461470e565b61321983614746565b600061330c6032836146af565b7f476f7665726e6f72427261766f3a3a63617374566f7465496e7465726e616c3a81527f20696e76616c696420766f746520747970650000000000000000000000000000602082015260400192915050565b600061336b6031836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a20696e76616c81527f69642076656d6f62692061646472657373000000000000000000000000000000602082015260400192915050565b60006133ca602883610f11565b7f42616c6c6f742875696e743235362070726f706f73616c49642c75696e74382081527f737570706f727429000000000000000000000000000000000000000000000000602082015260280192915050565b60006134296033836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a2063616e206f81527f6e6c7920696e697469616c697a65206f6e636500000000000000000000000000602082015260400192915050565b6000613488602a836146af565b7f476f7665726e6f72427261766f3a5f73657450656e64696e6741646d696e3a2081527f61646d696e206f6e6c7900000000000000000000000000000000000000000000602082015260400192915050565b60006134e76055836146af565b7f476f7665726e6f72427261766f3a3a71756575654f72526576657274496e746581527f726e616c3a206964656e746963616c2070726f706f73616c20616374696f6e2060208201527f616c726561647920717565756564206174206574610000000000000000000000604082015260600192915050565b600061356c602b836146af565b7f476f7665726e6f72427261766f3a3a5f736574566f74696e67506572696f643a81527f2061646d696e206f6e6c79000000000000000000000000000000000000000000602082015260400192915050565b60006135cb6033836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a20696e76616c81527f69642074696d656c6f636b206164647265737300000000000000000000000000602082015260400192915050565b600061362a602a836146af565b7f476f7665726e6f72427261766f3a3a5f736574566f74696e6744656c61793a2081527f61646d696e206f6e6c7900000000000000000000000000000000000000000000602082015260400192915050565b60006136896036836146af565b7f476f7665726e6f72427261766f3a3a5f736574566f74696e67506572696f643a81527f20696e76616c696420766f74696e6720706572696f6400000000000000000000602082015260400192915050565b60006136e86031836146af565b7f476f7665726e6f72427261766f3a3a63617374566f7465496e7465726e616c3a81527f20766f74696e6720697320636c6f736564000000000000000000000000000000602082015260400192915050565b60006137476034836146af565b7f476f7665726e6f72427261766f3a3a63617374566f7465496e7465726e616c3a81527f20766f74657220616c726561647920766f746564000000000000000000000000602082015260400192915050565b60006137a66034836146af565b7f476f7665726e6f72427261766f3a3a5f736574566f74696e6744656c61793a2081527f696e76616c696420766f74696e672064656c6179000000000000000000000000602082015260400192915050565b60006138056035836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a20696e76616c81527f69642070726f706f73616c207468726573686f6c640000000000000000000000602082015260400192915050565b60006138646045836146af565b7f476f7665726e6f72427261766f3a3a657865637574653a2070726f706f73616c81527f2063616e206f6e6c79206265206578656375746564206966206974206973207160208201527f7565756564000000000000000000000000000000000000000000000000000000604082015260600192915050565b60006138e9602f836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a20696e76616c81527f696420766f74696e672064656c61790000000000000000000000000000000000602082015260400192915050565b60006139486044836146af565b7f476f7665726e6f72427261766f3a3a70726f706f73653a2070726f706f73616c81527f2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d60208201527f6174636800000000000000000000000000000000000000000000000000000000604082015260600192915050565b60006139cd6025836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a2061646d696e81527f206f6e6c79000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000613a2c6040836146af565b7f476f7665726e6f72427261766f3a3a5f73657450726f706f73616c546872657381527f686f6c643a20696e76616c69642070726f706f73616c207468726573686f6c64602082015260400192915050565b6000613a8b6044836146af565b7f476f7665726e6f72427261766f3a3a71756575653a2070726f706f73616c206381527f616e206f6e6c792062652071756575656420696620697420697320737563636560208201527f6564656400000000000000000000000000000000000000000000000000000000604082015260600192915050565b6000613b106011836146af565b7f6164646974696f6e206f766572666c6f77000000000000000000000000000000815260200192915050565b6000613b49604383610f11565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201527f6374290000000000000000000000000000000000000000000000000000000000604082015260430192915050565b6000613bce602c836146af565b7f476f7665726e6f72427261766f3a3a70726f706f73653a206d7573742070726f81527f7669646520616374696f6e730000000000000000000000000000000000000000602082015260400192915050565b6000613c2d602e836146af565b7f476f7665726e6f72427261766f3a5f61636365707441646d696e3a2070656e6481527f696e672061646d696e206f6e6c79000000000000000000000000000000000000602082015260400192915050565b6000613c8c602f836146af565b7f476f7665726e6f72427261766f3a3a63616e63656c3a2070726f706f7365722081527f61626f7665207468726573686f6c640000000000000000000000000000000000602082015260400192915050565b6000613ceb6028836146af565b7f476f7665726e6f72427261766f3a3a70726f706f73653a20746f6f206d616e7981527f20616374696f6e73000000000000000000000000000000000000000000000000602082015260400192915050565b6000613d4a6059836146af565b7f476f7665726e6f72427261766f3a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000604082015260600192915050565b6000613dcf6058836146af565b7f476f7665726e6f72427261766f3a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c7265616479206163746976652070726f706f73616c0000000000000000604082015260600192915050565b6000611ed16000836146af565b6000613e61603f836146af565b7f476f7665726e6f72427261766f3a3a70726f706f73653a2070726f706f73657281527f20766f7465732062656c6f772070726f706f73616c207468726573686f6c6400602082015260400192915050565b6000613ec06036836146af565b7f476f7665726e6f72427261766f3a3a63616e63656c3a2063616e6e6f7420636181527f6e63656c2065786563757465642070726f706f73616c00000000000000000000602082015260400192915050565b6000613f1f6030836146af565b7f476f7665726e6f72427261766f3a3a5f73657450726f706f73616c546872657381527f686f6c643a2061646d696e206f6e6c7900000000000000000000000000000000602082015260400192915050565b6000613f7e6029836146af565b7f476f7665726e6f72427261766f3a3a73746174653a20696e76616c696420707281527f6f706f73616c2069640000000000000000000000000000000000000000000000602082015260400192915050565b6000613fdd6030836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a20696e76616c81527f696420766f74696e6720706572696f6400000000000000000000000000000000602082015260400192915050565b600061403c6015836146af565b7f7375627472616374696f6e20756e646572666c6f770000000000000000000000815260200192915050565b8051606083019061407984826131d9565b50602082015161408c60208501826140a5565b50604082015161409f60408501826131e2565b50505050565b613054816146eb565b6000611ed1826133bd565b6000611ed182613b3c565b60208101611ed1828461305a565b604081016140e0828561304b565b61229c60208301846131e2565b604081016140fb828561305a565b61229c602083018461305a565b604081016140e0828561305a565b60a08101614124828861305a565b61413160208301876131e2565b818103604083015261414381866131eb565b9050818103606083015261415781856131eb565b905061416660808301846131e2565b9695505050505050565b60a0810161417e828861305a565b61418b60208301876131e2565b818103604083015261419d8186613223565b905081810360608301526141578185613223565b608080825281016141c28187613063565b905081810360208301526141d6818661318b565b905081810360408301526141ea818561312a565b9050818103606083015261416681846130bc565b60208101611ed182846131e2565b60208101611ed182846132cb565b60208101611ed182846132d4565b6020808252810161229c81846131eb565b60208082528101611ed1816132ff565b60208082528101611ed18161335e565b60208082528101611ed18161341c565b60208082528101611ed18161347b565b60208082528101611ed1816134da565b60208082528101611ed18161355f565b60208082528101611ed1816135be565b60208082528101611ed18161361d565b60208082528101611ed18161367c565b60208082528101611ed1816136db565b60208082528101611ed18161373a565b60208082528101611ed181613799565b60208082528101611ed1816137f8565b60208082528101611ed181613857565b60208082528101611ed1816138dc565b60208082528101611ed18161393b565b60208082528101611ed1816139c0565b60208082528101611ed181613a1f565b60208082528101611ed181613a7e565b60208082528101611ed181613b03565b60208082528101611ed181613bc1565b60208082528101611ed181613c20565b60208082528101611ed181613c7f565b60208082528101611ed181613cde565b60208082528101611ed181613d3d565b60208082528101611ed181613dc2565b60208082528101611ed181613e54565b60208082528101611ed181613eb3565b60208082528101611ed181613f12565b60208082528101611ed181613f71565b60208082528101611ed181613fd0565b60208082528101611ed18161402f565b60608101611ed18284614068565b6101208101614456828c6131e2565b614463602083018b61304b565b8181036040830152614475818a613063565b90508181036060830152614489818961318b565b9050818103608083015261449d818861312a565b905081810360a08301526144b181876130bc565b90506144c060c08301866131e2565b6144cd60e08301856131e2565b8181036101008301526144e081846131eb565b9b9a5050505050505050505050565b61014081016144fe828d6131e2565b61450b602083018c61305a565b614518604083018b6131e2565b614525606083018a6131e2565b61453260808301896131e2565b61453f60a08301886131e2565b61454c60c08301876131e2565b61455960e08301866131e2565b6145676101008301856131d9565b6144e06101208301846131d9565b604081016140e082856131e2565b6080810161459182886131e2565b61459e60208301876140a5565b6145ab60408301866131e2565b81810360608301526145be8184866132dd565b979650505050505050565b608081016145d782866131e2565b6145e460208301856140a5565b6145f160408301846131e2565b818103606083015261460281613e47565b95945050505050565b60405181810167ffffffffffffffff8111828210171561462a57600080fd5b604052919050565b600067ffffffffffffffff82111561464957600080fd5b5060209081020190565b600067ffffffffffffffff82111561466a57600080fd5b506020601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b60200190565b60009081526020902090565b5190565b90815260200190565b6000611ed1826146d2565b151590565b80610f118161476e565b73ffffffffffffffffffffffffffffffffffffffff1690565b60ff1690565b6000611ed1825b6000611ed1826146b8565b6000611ed1826146c8565b82818337506000910152565b60005b8381101561473557818101518382015260200161471d565b8381111561409f5750506000910152565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b60088110612a8357fe5b614781816146b8565b8114612a8357600080fd5b614781816146c3565b6147818161296f565b614781816146eb56fea365627a7a723158201b659a3dbe053943a709108ce20523dbcd827208d24cbee0afb540392cc4393e6c6578706572696d656e74616cf564736f6c63430005100040",
  "deployedBytecode": "0x6080604052600436106102855760003560e01c80637b3c71d311610153578063da35c664116100cb578063e48083fe1161007f578063f851a44011610064578063f851a44014610678578063fc4eee421461068d578063fe0d94c1146106a257610285565b8063e48083fe1461064e578063e9c714f21461066357610285565b8063ddf0b009116100b0578063ddf0b009146105ec578063deaaa7cc1461060c578063e23a9a521461062157610285565b8063da35c664146105b7578063da95691a146105cc57610285565b8063b112626311610122578063b71d1a0c11610107578063b71d1a0c14610562578063d13f90b414610582578063d33219b4146105a257610285565b8063b112626314610516578063b58131b01461054d57610285565b80637b3c71d3146104e15780637bdbe4d014610501578063a64e024a14610516578063a6a0b3de1461052b57610285565b806324bc1a64116102015780633e4f49e6116101b5578063567813881161019a57806356781388146104975780635c60da1b146104b7578063791f5d23146104cc57610285565b80633e4f49e61461044a57806340e58ee51461047757610285565b806326782247116101e657806326782247146103e3578063328dd982146104055780633932abb11461043557610285565b806324bc1a64146103b957806325fd935a146103ce57610285565b806317977c61116102585780631dfb1b5a1161023d5780631dfb1b5a1461036f57806320606b701461038f578063215809ca146103a457610285565b806317977c611461032f57806317ba1b8b1461034f57610285565b8063013cf08b1461028a57806302a251a3146102c957806306fdde03146102eb5780630ea2d98c1461030d575b600080fd5b34801561029657600080fd5b506102aa6102a5366004612f2f565b6106b5565b6040516102c09a999897969594939291906144ef565b60405180910390f35b3480156102d557600080fd5b506102de610725565b6040516102c091906141fe565b3480156102f757600080fd5b5061030061072b565b6040516102c09190614228565b34801561031957600080fd5b5061032d610328366004612f2f565b610764565b005b34801561033b57600080fd5b506102de61034a366004612d44565b61084e565b34801561035b57600080fd5b5061032d61036a366004612f2f565b610860565b34801561037b57600080fd5b5061032d61038a366004612f2f565b610946565b34801561039b57600080fd5b506102de610a1b565b3480156103b057600080fd5b506102de610a32565b3480156103c557600080fd5b506102de610a37565b3480156103da57600080fd5b506102de610a46565b3480156103ef57600080fd5b506103f8610a55565b6040516102c091906140c4565b34801561041157600080fd5b50610425610420366004612f2f565b610a71565b6040516102c094939291906141b1565b34801561044157600080fd5b506102de610d49565b34801561045657600080fd5b5061046a610465366004612f2f565b610d4f565b6040516102c0919061421a565b34801561048357600080fd5b5061032d610492366004612f2f565b610f16565b3480156104a357600080fd5b5061032d6104b2366004612f87565b6111e7565b3480156104c357600080fd5b506103f8611231565b3480156104d857600080fd5b506102de61124d565b3480156104ed57600080fd5b5061032d6104fc366004612fb7565b61125b565b34801561050d57600080fd5b506102de6112ab565b34801561052257600080fd5b506102de6112b0565b34801561053757600080fd5b506105406112b7565b6040516102c0919061420c565b34801561055957600080fd5b506102de6112d3565b34801561056e57600080fd5b5061032d61057d366004612d44565b6112d9565b34801561058e57600080fd5b5061032d61059d366004612d6a565b6113a2565b3480156105ae57600080fd5b5061054061162f565b3480156105c357600080fd5b506102de61164b565b3480156105d857600080fd5b506102de6105e7366004612ddf565b611651565b3480156105f857600080fd5b5061032d610607366004612f2f565b611b57565b34801561061857600080fd5b506102de611e5c565b34801561062d57600080fd5b5061064161063c366004612f4d565b611e68565b6040516102c09190614439565b34801561065a57600080fd5b506102de611ed7565b34801561066f57600080fd5b5061032d611edc565b34801561068457600080fd5b506103f8612013565b34801561069957600080fd5b506102de61202f565b61032d6106b0366004612f2f565b612035565b600a60208190526000918252604090912080546001820154600283015460078401546008850154600986015496860154600b870154600c90970154959773ffffffffffffffffffffffffffffffffffffffff90951696939592949193919290919060ff808216916101009004168a565b60045481565b6040518060400160405280601181526020017f4d6f6269757320476f7665726e616e636500000000000000000000000000000081525081565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614289565b60405180910390fd5b600c81101580156107d257506201d8808111155b610808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906142b9565b60048054908290556040517f7e3f7f0708a84de9203036abaa450dccc85ad5ff52f78c170f3edb55cf5e8828906108429083908590614575565b60405180910390a15050565b600b6020526000908152604090205481565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906143f9565b69d3c21bcecceda100000081101580156108d657506a108b2a2c280290940000008111155b61090c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614349565b60058054908290556040517fccb45da8d5717e6c4544694297c4ba5cf151d455c9bb0ed4fc7a38411bc05461906108429083908590614575565b60005473ffffffffffffffffffffffffffffffffffffffff163314610997576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906142a9565b600181101580156109ab57506201d8808111155b6109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906142e9565b60038054908290556040517fc565b045403dc03c2eea82b81a0465edad9e2e7fc4d97e11421c209da93d7a93906108429083908590614575565b604051610a27906140b9565b604051809103902081565b600c81565b6a034f086f3b33b68400000081565b6a108b2a2c2802909400000081565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b6060806060806000600a600087815260200190815260200160002090508060030181600401826005018360060183805480602002602001604051908101604052809291908181526020018280548015610b0057602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610ad5575b5050505050935082805480602002602001604051908101604052809291908181526020018280548015610b5257602002820191906000526020600020905b815481526020019060010190808311610b3e575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b82821015610c435760008481526020908190208301805460408051601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600187161502019094169390930492830185900485028101850190915281815292830182828015610c2f5780601f10610c0457610100808354040283529160200191610c2f565b820191906000526020600020905b815481529060010190602001808311610c1257829003601f168201915b505050505081526020019060010190610b7a565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610d335760008481526020908190208301805460408051601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600187161502019094169390930492830185900485028101850190915281815292830182828015610d1f5780601f10610cf457610100808354040283529160200191610d1f565b820191906000526020600020905b815481529060010190602001808311610d0257829003601f168201915b505050505081526020019060010190610c6a565b5050505090509450945094509450509193509193565b60035481565b60008160075410158015610d64575060065482115b610d9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614409565b6000828152600a60205260409020600c81015460ff1615610dbf576002915050610f11565b80600701544311610dd4576000915050610f11565b80600801544311610de9576001915050610f11565b80600a01548160090154111580610e0e57506a034f086f3b33b6840000008160090154105b15610e1d576003915050610f11565b6002810154610e30576004915050610f11565b600c810154610100900460ff1615610e4c576007915050610f11565b6002810154600854604080517fc1a287e20000000000000000000000000000000000000000000000000000000081529051610efb939273ffffffffffffffffffffffffffffffffffffffff169163c1a287e2916004808301926020929190829003018186803b158015610ebe57600080fd5b505afa158015610ed2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ef69190810190612edc565b61225d565b4210610f0b576006915050610f11565b60059150505b919050565b6007610f2182610d4f565b6007811115610f2c57fe5b1415610f64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906143e9565b6000818152600a60205260409020600181015473ffffffffffffffffffffffffffffffffffffffff1633148061103d575060055460095460018381015473ffffffffffffffffffffffffffffffffffffffff92831692634ee2cd7e92911690610fce9043906122a3565b6040518363ffffffff1660e01b8152600401610feb929190614108565b60206040518083038186803b15801561100357600080fd5b505afa158015611017573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061103b9190810190612edc565b105b611073576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614399565b600c810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905560005b60038201548110156111b75760085460038301805473ffffffffffffffffffffffffffffffffffffffff9092169163591fcdfe9190849081106110e257fe5b60009182526020909120015460048501805473ffffffffffffffffffffffffffffffffffffffff909216918590811061111757fe5b906000526020600020015485600501858154811061113157fe5b9060005260206000200186600601868154811061114a57fe5b9060005260206000200187600201546040518663ffffffff1660e01b8152600401611179959493929190614170565b600060405180830381600087803b15801561119357600080fd5b505af11580156111a7573d6000803e3d6000fd5b5050600190920191506110a39050565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c8260405161084291906141fe565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda483836112168483836122e5565b604051611225939291906145c9565b60405180910390a25050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b69d3c21bcecceda100000081565b337fb8e138887d0aa13bab447e82de9d5c1777041ecd21ca36ba824ff1e6c07ddda4858561128a8483836122e5565b868660405161129d959493929190614583565b60405180910390a250505050565b600a81565b6201d88081565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60005473ffffffffffffffffffffffffffffffffffffffff16331461132a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614269565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff00000000000000000000000000000000000000008316179092556040519116907fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99061084290839085906140ed565b60085473ffffffffffffffffffffffffffffffffffffffff16156113f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614259565b60005473ffffffffffffffffffffffffffffffffffffffff163314611443576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614339565b73ffffffffffffffffffffffffffffffffffffffff8516611490576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614299565b73ffffffffffffffffffffffffffffffffffffffff84166114dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614249565b600c83101580156114f157506201d8808311155b611527576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614419565b6001821015801561153b57506201d8808211155b611571576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614319565b69d3c21bcecceda1000000811015801561159657506a108b2a2c280290940000008111155b6115cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906142f9565b6008805473ffffffffffffffffffffffffffffffffffffffff9687167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091556009805495909616941693909317909355600455600391909155600555565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b6005546009546000919073ffffffffffffffffffffffffffffffffffffffff16634ee2cd7e336116824360016122a3565b6040518363ffffffff1660e01b815260040161169f9291906140d2565b60206040518083038186803b1580156116b757600080fd5b505afa1580156116cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116ef9190810190612edc565b11611726576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906143d9565b84518651148015611738575083518651145b8015611745575082518651145b61177b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614329565b85516117b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614379565b600a865111156117ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906143a9565b336000908152600b602052604090205480156118a057600061181082610d4f565b9050600181600781111561182057fe5b1415611858576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906143c9565b600081600781111561186657fe5b141561189e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906143b9565b505b60006118ae4360035461225d565b905060006118be8260045461225d565b60078054600101905590506118d1612707565b604051806101c0016040528060075481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600081526020018b81526020018a815260200189815260200188815260200184815260200183815260200160008152602001600081526020016000815260200160001515815260200160001515815250905080600a6000836000015181526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030190805190602001906119e2929190612790565b50608082015180516119fe91600484019160209091019061281a565b5060a08201518051611a1a916005840191602090910190612861565b5060c08201518051611a369160068401916020909101906128ba565b5060e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b015561018082015181600c0160006101000a81548160ff0219169083151502179055506101a082015181600c0160016101000a81548160ff0219169083151502179055509050508060000151600b6000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e604051611b4199989796959493929190614447565b60405180910390a1519998505050505050505050565b6004611b6282610d4f565b6007811115611b6d57fe5b14611ba4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614359565b6000818152600a6020908152604080832060085482517f6a42b8f80000000000000000000000000000000000000000000000000000000081529251919493611c2493429373ffffffffffffffffffffffffffffffffffffffff90931692636a42b8f892600480840193919291829003018186803b158015610ebe57600080fd5b905060005b6003830154811015611e1557611e0d836003018281548110611c4757fe5b60009182526020909120015460048501805473ffffffffffffffffffffffffffffffffffffffff9092169184908110611c7c57fe5b9060005260206000200154856005018481548110611c9657fe5b600091825260209182902001805460408051601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600187161502019094169390930492830185900485028101850190915281815292830182828015611d425780601f10611d1757610100808354040283529160200191611d42565b820191906000526020600020905b815481529060010190602001808311611d2557829003601f168201915b5050505050866006018581548110611d5657fe5b600091825260209182902001805460408051601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610100600187161502019094169390930492830185900485028101850190915281815292830182828015611e025780601f10611dd757610100808354040283529160200191611e02565b820191906000526020600020905b815481529060010190602001808311611de557829003601f168201915b50505050508661255b565b600101611c29565b50600282018190556040517f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda289290611e4f9085908490614575565b60405180910390a1505050565b604051610a27906140ae565b611e70612913565b506000828152600a6020908152604080832073ffffffffffffffffffffffffffffffffffffffff85168452600d018252918290208251606081018452815460ff80821615158352610100909104169281019290925260010154918101919091525b92915050565b600181565b60015473ffffffffffffffffffffffffffffffffffffffff1633148015611f0257503315155b611f38576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614389565b600080546001805473ffffffffffffffffffffffffffffffffffffffff8082167fffffffffffffffffffffffff00000000000000000000000000000000000000008086168217968790559092169092556040519282169390927ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc92611fc19286929116906140ed565b60405180910390a16001546040517fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99161084291849173ffffffffffffffffffffffffffffffffffffffff16906140ed565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b600561204082610d4f565b600781111561204b57fe5b14612082576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614309565b6000818152600a60205260408120600c810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055905b600382015481101561222d5760085460048301805473ffffffffffffffffffffffffffffffffffffffff90921691630825f38f9190849081106120ff57fe5b906000526020600020015484600301848154811061211957fe5b60009182526020909120015460048601805473ffffffffffffffffffffffffffffffffffffffff909216918690811061214e57fe5b906000526020600020015486600501868154811061216857fe5b9060005260206000200187600601878154811061218157fe5b9060005260206000200188600201546040518763ffffffff1660e01b81526004016121b0959493929190614170565b6000604051808303818588803b1580156121c957600080fd5b505af11580156121dd573d6000803e3d6000fd5b50505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526122249190810190612efa565b506001016120c0565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f8260405161084291906141fe565b60008282018381101561229c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614369565b9392505050565b6000828211156122df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614429565b50900390565b600060016122f284610d4f565b60078111156122fd57fe5b14612334576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906142c9565b60028260ff161115612372576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614239565b6000838152600a6020908152604080832073ffffffffffffffffffffffffffffffffffffffff88168452600d8101909252909120805460ff16156123e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906142d9565b60095460078301546040517f4ee2cd7e00000000000000000000000000000000000000000000000000000000815260009273ffffffffffffffffffffffffffffffffffffffff1691634ee2cd7e9161243e918b91600401614108565b60206040518083038186803b15801561245657600080fd5b505afa15801561246a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061248e9190810190612edc565b905060ff85166124b0576124a683600a01548261225d565b600a8401556124f4565b8460ff16600114156124d4576124ca83600901548261225d565b60098401556124f4565b8460ff16600214156124f4576124ee83600b01548261225d565b600b8401555b815460017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090911681177fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1661010060ff8816021783559091018190559150509392505050565b60085460405173ffffffffffffffffffffffffffffffffffffffff9091169063f2b06537906125969088908890889088908890602001614116565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016125c891906141fe565b60206040518083038186803b1580156125e057600080fd5b505afa1580156125f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126189190810190612ebe565b1561264f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b590614279565b6008546040517f3a66f90100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690633a66f901906126ad9088908890889088908890600401614116565b602060405180830381600087803b1580156126c757600080fd5b505af11580156126db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126ff9190810190612edc565b505050505050565b604051806101c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016060815260200160608152602001606081526020016060815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b82805482825590600052602060002090810192821561280a579160200282015b8281111561280a57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906127b0565b50612816929150612933565b5090565b828054828255906000526020600020908101928215612855579160200282015b8281111561285557825182559160200191906001019061283a565b50612816929150612972565b8280548282559060005260206000209081019282156128ae579160200282015b828111156128ae578251805161289e91849160209091019061298c565b5091602001919060010190612881565b506128169291506129f9565b828054828255906000526020600020908101928215612907579160200282015b8281111561290757825180516128f791849160209091019061298c565b50916020019190600101906128da565b50612816929150612a1c565b604080516060810182526000808252602082018190529181019190915290565b61296f91905b808211156128165780547fffffffffffffffffffffffff0000000000000000000000000000000000000000168155600101612939565b90565b61296f91905b808211156128165760008155600101612978565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106129cd57805160ff1916838001178555612855565b82800160010185558215612855579182018281111561285557825182559160200191906001019061283a565b61296f91905b80821115612816576000612a138282612a3f565b506001016129ff565b61296f91905b80821115612816576000612a368282612a3f565b50600101612a22565b50805460018160011615610100020316600290046000825580601f10612a655750612a83565b601f016020900490600052602060002090810190612a839190612972565b50565b8035611ed181614778565b600082601f830112612aa257600080fd5b8135612ab5612ab082614632565b61460b565b91508181835260208401935060208101905083856020840282011115612ada57600080fd5b60005b83811015612b065781612af08882612a86565b8452506020928301929190910190600101612add565b5050505092915050565b600082601f830112612b2157600080fd5b8135612b2f612ab082614632565b81815260209384019390925082018360005b83811015612b065781358601612b578882612c50565b8452506020928301929190910190600101612b41565b600082601f830112612b7e57600080fd5b8135612b8c612ab082614632565b81815260209384019390925082018360005b83811015612b065781358601612bb48882612c50565b8452506020928301929190910190600101612b9e565b600082601f830112612bdb57600080fd5b8135612be9612ab082614632565b91508181835260208401935060208101905083856020840282011115612c0e57600080fd5b60005b83811015612b065781612c248882612d2e565b8452506020928301929190910190600101612c11565b8051611ed18161478c565b8051611ed181614795565b600082601f830112612c6157600080fd5b8135612c6f612ab082614653565b91508082526020830160208301858383011115612c8b57600080fd5b612c9683828461470e565b50505092915050565b600082601f830112612cb057600080fd5b8151612cbe612ab082614653565b91508082526020830160208301858383011115612cda57600080fd5b612c9683828461471a565b60008083601f840112612cf757600080fd5b50813567ffffffffffffffff811115612d0f57600080fd5b602083019150836001820283011115612d2757600080fd5b9250929050565b8035611ed181614795565b8035611ed18161479e565b600060208284031215612d5657600080fd5b6000612d628484612a86565b949350505050565b600080600080600060a08688031215612d8257600080fd5b6000612d8e8888612a86565b9550506020612d9f88828901612a86565b9450506040612db088828901612d2e565b9350506060612dc188828901612d2e565b9250506080612dd288828901612d2e565b9150509295509295909350565b600080600080600060a08688031215612df757600080fd5b853567ffffffffffffffff811115612e0e57600080fd5b612e1a88828901612a91565b955050602086013567ffffffffffffffff811115612e3757600080fd5b612e4388828901612bca565b945050604086013567ffffffffffffffff811115612e6057600080fd5b612e6c88828901612b6d565b935050606086013567ffffffffffffffff811115612e8957600080fd5b612e9588828901612b10565b925050608086013567ffffffffffffffff811115612eb257600080fd5b612dd288828901612c50565b600060208284031215612ed057600080fd5b6000612d628484612c3a565b600060208284031215612eee57600080fd5b6000612d628484612c45565b600060208284031215612f0c57600080fd5b815167ffffffffffffffff811115612f2357600080fd5b612d6284828501612c9f565b600060208284031215612f4157600080fd5b6000612d628484612d2e565b60008060408385031215612f6057600080fd5b6000612f6c8585612d2e565b9250506020612f7d85828601612a86565b9150509250929050565b60008060408385031215612f9a57600080fd5b6000612fa68585612d2e565b9250506020612f7d85828601612d39565b60008060008060608587031215612fcd57600080fd5b6000612fd98787612d2e565b9450506020612fea87828801612d39565b935050604085013567ffffffffffffffff81111561300757600080fd5b61301387828801612ce5565b95989497509550505050565b600061302b838361305a565b505060200190565b600061229c83836131eb565b600061302b83836131e2565b613054816146f1565b82525050565b613054816146b8565b600061306e826146ab565b61307881856146af565b935061308383614699565b8060005b838110156130b157815161309b888261301f565b97506130a683614699565b925050600101613087565b509495945050505050565b60006130c7826146ab565b6130d181856146af565b9350836020820285016130e385614699565b8060005b8581101561311d57848403895281516131008582613033565b945061310b83614699565b60209a909a01999250506001016130e7565b5091979650505050505050565b6000613135826146ab565b61313f81856146af565b93508360208202850161315185614699565b8060005b8581101561311d578484038952815161316e8582613033565b945061317983614699565b60209a909a0199925050600101613155565b6000613196826146ab565b6131a081856146af565b93506131ab83614699565b8060005b838110156130b15781516131c3888261303f565b97506131ce83614699565b9250506001016131af565b613054816146c3565b6130548161296f565b60006131f6826146ab565b61320081856146af565b935061321081856020860161471a565b61321981614746565b9093019392505050565b6000815460018116600081146132405760018114613284576132c3565b607f600283041661325181876146af565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00841681529550506020850192506132c3565b6002820461329281876146af565b955061329d8561469f565b60005b828110156132bc578154888201526001909101906020016132a0565b8701945050505b505092915050565b613054816146f8565b61305481614703565b60006132e983856146af565b93506132f683858461470e565b61321983614746565b600061330c6032836146af565b7f476f7665726e6f72427261766f3a3a63617374566f7465496e7465726e616c3a81527f20696e76616c696420766f746520747970650000000000000000000000000000602082015260400192915050565b600061336b6031836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a20696e76616c81527f69642076656d6f62692061646472657373000000000000000000000000000000602082015260400192915050565b60006133ca602883610f11565b7f42616c6c6f742875696e743235362070726f706f73616c49642c75696e74382081527f737570706f727429000000000000000000000000000000000000000000000000602082015260280192915050565b60006134296033836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a2063616e206f81527f6e6c7920696e697469616c697a65206f6e636500000000000000000000000000602082015260400192915050565b6000613488602a836146af565b7f476f7665726e6f72427261766f3a5f73657450656e64696e6741646d696e3a2081527f61646d696e206f6e6c7900000000000000000000000000000000000000000000602082015260400192915050565b60006134e76055836146af565b7f476f7665726e6f72427261766f3a3a71756575654f72526576657274496e746581527f726e616c3a206964656e746963616c2070726f706f73616c20616374696f6e2060208201527f616c726561647920717565756564206174206574610000000000000000000000604082015260600192915050565b600061356c602b836146af565b7f476f7665726e6f72427261766f3a3a5f736574566f74696e67506572696f643a81527f2061646d696e206f6e6c79000000000000000000000000000000000000000000602082015260400192915050565b60006135cb6033836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a20696e76616c81527f69642074696d656c6f636b206164647265737300000000000000000000000000602082015260400192915050565b600061362a602a836146af565b7f476f7665726e6f72427261766f3a3a5f736574566f74696e6744656c61793a2081527f61646d696e206f6e6c7900000000000000000000000000000000000000000000602082015260400192915050565b60006136896036836146af565b7f476f7665726e6f72427261766f3a3a5f736574566f74696e67506572696f643a81527f20696e76616c696420766f74696e6720706572696f6400000000000000000000602082015260400192915050565b60006136e86031836146af565b7f476f7665726e6f72427261766f3a3a63617374566f7465496e7465726e616c3a81527f20766f74696e6720697320636c6f736564000000000000000000000000000000602082015260400192915050565b60006137476034836146af565b7f476f7665726e6f72427261766f3a3a63617374566f7465496e7465726e616c3a81527f20766f74657220616c726561647920766f746564000000000000000000000000602082015260400192915050565b60006137a66034836146af565b7f476f7665726e6f72427261766f3a3a5f736574566f74696e6744656c61793a2081527f696e76616c696420766f74696e672064656c6179000000000000000000000000602082015260400192915050565b60006138056035836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a20696e76616c81527f69642070726f706f73616c207468726573686f6c640000000000000000000000602082015260400192915050565b60006138646045836146af565b7f476f7665726e6f72427261766f3a3a657865637574653a2070726f706f73616c81527f2063616e206f6e6c79206265206578656375746564206966206974206973207160208201527f7565756564000000000000000000000000000000000000000000000000000000604082015260600192915050565b60006138e9602f836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a20696e76616c81527f696420766f74696e672064656c61790000000000000000000000000000000000602082015260400192915050565b60006139486044836146af565b7f476f7665726e6f72427261766f3a3a70726f706f73653a2070726f706f73616c81527f2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d60208201527f6174636800000000000000000000000000000000000000000000000000000000604082015260600192915050565b60006139cd6025836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a2061646d696e81527f206f6e6c79000000000000000000000000000000000000000000000000000000602082015260400192915050565b6000613a2c6040836146af565b7f476f7665726e6f72427261766f3a3a5f73657450726f706f73616c546872657381527f686f6c643a20696e76616c69642070726f706f73616c207468726573686f6c64602082015260400192915050565b6000613a8b6044836146af565b7f476f7665726e6f72427261766f3a3a71756575653a2070726f706f73616c206381527f616e206f6e6c792062652071756575656420696620697420697320737563636560208201527f6564656400000000000000000000000000000000000000000000000000000000604082015260600192915050565b6000613b106011836146af565b7f6164646974696f6e206f766572666c6f77000000000000000000000000000000815260200192915050565b6000613b49604383610f11565b7f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353681527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208201527f6374290000000000000000000000000000000000000000000000000000000000604082015260430192915050565b6000613bce602c836146af565b7f476f7665726e6f72427261766f3a3a70726f706f73653a206d7573742070726f81527f7669646520616374696f6e730000000000000000000000000000000000000000602082015260400192915050565b6000613c2d602e836146af565b7f476f7665726e6f72427261766f3a5f61636365707441646d696e3a2070656e6481527f696e672061646d696e206f6e6c79000000000000000000000000000000000000602082015260400192915050565b6000613c8c602f836146af565b7f476f7665726e6f72427261766f3a3a63616e63656c3a2070726f706f7365722081527f61626f7665207468726573686f6c640000000000000000000000000000000000602082015260400192915050565b6000613ceb6028836146af565b7f476f7665726e6f72427261766f3a3a70726f706f73653a20746f6f206d616e7981527f20616374696f6e73000000000000000000000000000000000000000000000000602082015260400192915050565b6000613d4a6059836146af565b7f476f7665726e6f72427261766f3a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c72656164792070656e64696e672070726f706f73616c00000000000000604082015260600192915050565b6000613dcf6058836146af565b7f476f7665726e6f72427261766f3a3a70726f706f73653a206f6e65206c69766581527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208201527f20616c7265616479206163746976652070726f706f73616c0000000000000000604082015260600192915050565b6000611ed16000836146af565b6000613e61603f836146af565b7f476f7665726e6f72427261766f3a3a70726f706f73653a2070726f706f73657281527f20766f7465732062656c6f772070726f706f73616c207468726573686f6c6400602082015260400192915050565b6000613ec06036836146af565b7f476f7665726e6f72427261766f3a3a63616e63656c3a2063616e6e6f7420636181527f6e63656c2065786563757465642070726f706f73616c00000000000000000000602082015260400192915050565b6000613f1f6030836146af565b7f476f7665726e6f72427261766f3a3a5f73657450726f706f73616c546872657381527f686f6c643a2061646d696e206f6e6c7900000000000000000000000000000000602082015260400192915050565b6000613f7e6029836146af565b7f476f7665726e6f72427261766f3a3a73746174653a20696e76616c696420707281527f6f706f73616c2069640000000000000000000000000000000000000000000000602082015260400192915050565b6000613fdd6030836146af565b7f476f7665726e6f72427261766f3a3a696e697469616c697a653a20696e76616c81527f696420766f74696e6720706572696f6400000000000000000000000000000000602082015260400192915050565b600061403c6015836146af565b7f7375627472616374696f6e20756e646572666c6f770000000000000000000000815260200192915050565b8051606083019061407984826131d9565b50602082015161408c60208501826140a5565b50604082015161409f60408501826131e2565b50505050565b613054816146eb565b6000611ed1826133bd565b6000611ed182613b3c565b60208101611ed1828461305a565b604081016140e0828561304b565b61229c60208301846131e2565b604081016140fb828561305a565b61229c602083018461305a565b604081016140e0828561305a565b60a08101614124828861305a565b61413160208301876131e2565b818103604083015261414381866131eb565b9050818103606083015261415781856131eb565b905061416660808301846131e2565b9695505050505050565b60a0810161417e828861305a565b61418b60208301876131e2565b818103604083015261419d8186613223565b905081810360608301526141578185613223565b608080825281016141c28187613063565b905081810360208301526141d6818661318b565b905081810360408301526141ea818561312a565b9050818103606083015261416681846130bc565b60208101611ed182846131e2565b60208101611ed182846132cb565b60208101611ed182846132d4565b6020808252810161229c81846131eb565b60208082528101611ed1816132ff565b60208082528101611ed18161335e565b60208082528101611ed18161341c565b60208082528101611ed18161347b565b60208082528101611ed1816134da565b60208082528101611ed18161355f565b60208082528101611ed1816135be565b60208082528101611ed18161361d565b60208082528101611ed18161367c565b60208082528101611ed1816136db565b60208082528101611ed18161373a565b60208082528101611ed181613799565b60208082528101611ed1816137f8565b60208082528101611ed181613857565b60208082528101611ed1816138dc565b60208082528101611ed18161393b565b60208082528101611ed1816139c0565b60208082528101611ed181613a1f565b60208082528101611ed181613a7e565b60208082528101611ed181613b03565b60208082528101611ed181613bc1565b60208082528101611ed181613c20565b60208082528101611ed181613c7f565b60208082528101611ed181613cde565b60208082528101611ed181613d3d565b60208082528101611ed181613dc2565b60208082528101611ed181613e54565b60208082528101611ed181613eb3565b60208082528101611ed181613f12565b60208082528101611ed181613f71565b60208082528101611ed181613fd0565b60208082528101611ed18161402f565b60608101611ed18284614068565b6101208101614456828c6131e2565b614463602083018b61304b565b8181036040830152614475818a613063565b90508181036060830152614489818961318b565b9050818103608083015261449d818861312a565b905081810360a08301526144b181876130bc565b90506144c060c08301866131e2565b6144cd60e08301856131e2565b8181036101008301526144e081846131eb565b9b9a5050505050505050505050565b61014081016144fe828d6131e2565b61450b602083018c61305a565b614518604083018b6131e2565b614525606083018a6131e2565b61453260808301896131e2565b61453f60a08301886131e2565b61454c60c08301876131e2565b61455960e08301866131e2565b6145676101008301856131d9565b6144e06101208301846131d9565b604081016140e082856131e2565b6080810161459182886131e2565b61459e60208301876140a5565b6145ab60408301866131e2565b81810360608301526145be8184866132dd565b979650505050505050565b608081016145d782866131e2565b6145e460208301856140a5565b6145f160408301846131e2565b818103606083015261460281613e47565b95945050505050565b60405181810167ffffffffffffffff8111828210171561462a57600080fd5b604052919050565b600067ffffffffffffffff82111561464957600080fd5b5060209081020190565b600067ffffffffffffffff82111561466a57600080fd5b506020601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160190565b60200190565b60009081526020902090565b5190565b90815260200190565b6000611ed1826146d2565b151590565b80610f118161476e565b73ffffffffffffffffffffffffffffffffffffffff1690565b60ff1690565b6000611ed1825b6000611ed1826146b8565b6000611ed1826146c8565b82818337506000910152565b60005b8381101561473557818101518382015260200161471d565b8381111561409f5750506000910152565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01690565b60088110612a8357fe5b614781816146b8565b8114612a8357600080fd5b614781816146c3565b6147818161296f565b614781816146eb56fea365627a7a723158201b659a3dbe053943a709108ce20523dbcd827208d24cbee0afb540392cc4393e6c6578706572696d656e74616cf564736f6c63430005100040",
  "devdoc": {
    "methods": {
      "_acceptAdmin()": {
        "details": "Admin function for pending admin to accept role and update admin"
      },
      "_setPendingAdmin(address)": {
        "details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
        "params": {
          "newPendingAdmin": "New pending admin."
        }
      },
      "_setProposalThreshold(uint256)": {
        "details": "newProposalThreshold must be greater than the hardcoded min",
        "params": {
          "newProposalThreshold": "new proposal threshold"
        }
      },
      "_setVotingDelay(uint256)": {
        "params": {
          "newVotingDelay": "new voting delay, in blocks"
        }
      },
      "_setVotingPeriod(uint256)": {
        "params": {
          "newVotingPeriod": "new voting period, in blocks"
        }
      },
      "cancel(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to cancel"
        }
      },
      "castVote(uint256,uint8)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "params": {
          "proposalId": "The id of the proposal to vote on",
          "reason": "The reason given for the vote by the voter",
          "support": "The support value for the vote. 0=against, 1=for, 2=abstain"
        }
      },
      "execute(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to execute"
        }
      },
      "getActions(uint256)": {
        "params": {
          "proposalId": "the id of the proposal"
        },
        "return": "Targets, values, signatures, and calldatas of the proposal actions"
      },
      "getReceipt(uint256,address)": {
        "params": {
          "proposalId": "the id of proposal",
          "voter": "The address of the voter"
        },
        "return": "The voting receipt"
      },
      "initialize(address,address,uint256,uint256,uint256)": {
        "params": {
          "proposalThreshold_": "The initial proposal threshold",
          "timelock_": "The address of the Timelock",
          "vemobi_": "The address of the veMOBI token",
          "votingDelay_": "The initial voting delay",
          "votingPeriod_": "The initial voting period"
        }
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "params": {
          "calldatas": "Calldatas for proposal calls",
          "description": "String description of the proposal",
          "signatures": "Function signatures for proposal calls",
          "targets": "Target addresses for proposal calls",
          "values": "Eth values for proposal calls"
        },
        "return": "Proposal id of new proposal"
      },
      "queue(uint256)": {
        "params": {
          "proposalId": "The id of the proposal to queue"
        }
      },
      "state(uint256)": {
        "params": {
          "proposalId": "The id of the proposal"
        },
        "return": "Proposal state"
      }
    }
  },
  "userdoc": {
    "methods": {
      "_acceptAdmin()": {
        "notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
      },
      "_setPendingAdmin(address)": {
        "notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
      },
      "_setProposalThreshold(uint256)": {
        "notice": "Admin function for setting the proposal threshold"
      },
      "_setVotingDelay(uint256)": {
        "notice": "Admin function for setting the voting delay"
      },
      "_setVotingPeriod(uint256)": {
        "notice": "Admin function for setting the voting period"
      },
      "cancel(uint256)": {
        "notice": "Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold"
      },
      "castVote(uint256,uint8)": {
        "notice": "Cast a vote for a proposal"
      },
      "castVoteWithReason(uint256,uint8,string)": {
        "notice": "Cast a vote for a proposal with a reason"
      },
      "execute(uint256)": {
        "notice": "Executes a queued proposal if eta has passed"
      },
      "getActions(uint256)": {
        "notice": "Gets actions of a proposal"
      },
      "getReceipt(uint256,address)": {
        "notice": "Gets the receipt for a voter on a given proposal"
      },
      "initialize(address,address,uint256,uint256,uint256)": {
        "notice": "Used to initialize the contract during delegator contructor"
      },
      "propose(address[],uint256[],string[],bytes[],string)": {
        "notice": "Function used to propose a new proposal. Sender must have delegates above the proposal threshold"
      },
      "queue(uint256)": {
        "notice": "Queues a proposal of state succeeded"
      },
      "state(uint256)": {
        "notice": "Gets the state of a proposal"
      }
    }
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1409,
        "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 1411,
        "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
        "label": "pendingAdmin",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1413,
        "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
        "label": "implementation",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1418,
        "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
        "label": "votingDelay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 1420,
        "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
        "label": "votingPeriod",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1422,
        "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
        "label": "proposalThreshold",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 1424,
        "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
        "label": "initialProposalId",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 1426,
        "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
        "label": "proposalCount",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 1428,
        "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
        "label": "timelock",
        "offset": 0,
        "slot": "8",
        "type": "t_contract(TimelockInterface)1565"
      },
      {
        "astId": 1430,
        "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
        "label": "vemobi",
        "offset": 0,
        "slot": "9",
        "type": "t_contract(veMOBIInterface)1575"
      },
      {
        "astId": 1434,
        "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
        "label": "proposals",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_struct(Proposal)1475_storage)"
      },
      {
        "astId": 1438,
        "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(TimelockInterface)1565": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_contract(veMOBIInterface)1575": {
        "encoding": "inplace",
        "label": "contract veMOBIInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)1482_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GovernorBravoDelegateStorageV1.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)1482_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Proposal)1475_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GovernorBravoDelegateStorageV1.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)1475_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)1475_storage": {
        "encoding": "inplace",
        "label": "struct GovernorBravoDelegateStorageV1.Proposal",
        "members": [
          {
            "astId": 1440,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1442,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1444,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 1447,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "targets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1450,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "values",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 1453,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "signatures",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 1456,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "calldatas",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 1458,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "startBlock",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 1460,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "endBlock",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 1462,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "forVotes",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 1464,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "againstVotes",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 1466,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "abstainVotes",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256"
          },
          {
            "astId": 1468,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "canceled",
            "offset": 0,
            "slot": "12",
            "type": "t_bool"
          },
          {
            "astId": 1470,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "executed",
            "offset": 1,
            "slot": "12",
            "type": "t_bool"
          },
          {
            "astId": 1474,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "receipts",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(Receipt)1482_storage)"
          }
        ],
        "numberOfBytes": "448"
      },
      "t_struct(Receipt)1482_storage": {
        "encoding": "inplace",
        "label": "struct GovernorBravoDelegateStorageV1.Receipt",
        "members": [
          {
            "astId": 1477,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 1479,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 1481,
            "contract": "contracts/Governance/GovernorBravoDelegateG1.sol:GovernorBravoDelegate",
            "label": "votes",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}